"use strict";const _version_="0.1.10";class MicroGraph{constructor(a,b){this.id=a,this.offsetX=40,this.offsetY=25,this.edge=4,this.canvas=document.getElementById(this.id),this.canvas===void 0?console.log("Canvas element not found, id: "+a):(this.ctx=this.canvas.getContext("2d"),this.minBorder=void 0,this.maxBorder=void 0,this.minValue=void 0,this.maxValue=void 0,this.regionLength=void 0,this.regionStep=void 0,this.regionHeight=void 0,this.regionPixelValue=void 0,this.labelWidth=void 0,this.loadData(b),this.resizeCanvas(),this.makeHint(),this.addEvents())}buildGraph(){this.hideHint(),this.resizeCanvas(),this.makeTitle(),this.fillTableArea(),this.makeRegionLines(),this.makeVerticalLines(),this.makeHorizontalLines();let a=this.data.values.length;for(let b=0;b<a;b++)this.makeGradient(b),this.makeGraphLine(b),this.makeDots(b)}rebuildGraph(a){this.loadData(a),this.buildGraph()}loadData(a){this.data=a,this.minBorder=a.yScale[0].start,this.maxBorder=a.yScale[0].end,this.minValue=a.yScale[0].start,this.maxValue=a.yScale[0].end;let b=this.data.values.length;for(let c=0;c<b;c++)this.calcMinMax(c);this.regionStep=this.calcRegionStep();const c=this.maxBorder-this.minBorder;this.regionLength=Math.round(c/this.regionStep)+1}addEvents(){this.handleBuild=this.buildGraph.bind(this),this.handleMouseMove=this.graphMouseMove.bind(this),this.handleMouseLeave=this.graphMouseLeave.bind(this),window.addEventListener("load",this.handleBuild),window.addEventListener("resize",this.handleBuild),this.canvas.addEventListener("mousemove",this.handleMouseMove),this.canvas.addEventListener("mouseleave",this.handleMouseLeave),this.canvas.addEventListener("ontouchstart",this.handleMouseMove)}resizeCanvas(){this.canvas.height=void 0===this.data.height?300:this.data.height,this.canvas.width=this.canvas.parentElement.clientWidth,this.canvas.style.textAlign="center",this.labelWidth=(this.canvas.clientWidth-2*this.offsetX)/this.data.xScale[0].labels.length,this.regionHeight=(this.canvas.clientHeight-2*this.offsetY)/(this.regionLength-1);const a=this.maxBorder-this.minBorder;this.regionPixelValue=(this.canvas.clientHeight-2*this.offsetY)/a}fillTableArea(){const a=this.data.xScale[0].labels.length,b=this.data.yScale[0].end,c=this.data.yScale[0].start,d=this.offsetY+(this.maxBorder-b)*this.regionPixelValue,e=(b-c)*this.regionPixelValue;this.ctx.fillStyle="rgb(228 234 239 / 50%)",this.ctx.fillRect(this.offsetX,d,this.labelWidth*a,e)}makeRegionLines(){const a=this.data.yScale[0].end,b=this.data.yScale[0].start,c=this.offsetY+(this.maxBorder-a)*this.regionPixelValue,d=(a-b)*this.regionPixelValue;this.ctx.lineWidth=1,this.ctx.strokeStyle="rgb(218 218 218 / 100%)";const e=this.offsetX,f=this.canvas.clientWidth-this.offsetX;this.ctx.beginPath(),this.ctx.moveTo(e,c),this.ctx.lineTo(f,c),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(e,c+d),this.ctx.lineTo(f,c+d),this.ctx.stroke()}makeVerticalLines(){this.ctx.lineWidth=1,this.ctx.strokeStyle="rgb(220 220 220 / 100%)",this.ctx.font="10px Arial",this.ctx.textAlign="center",this.ctx.fillStyle="rgb(90 90 90 / 100%)";const a=this.data.xScale[0].labels.length,b=this.offsetY-this.edge-1,c=this.canvas.clientHeight-this.offsetY+this.edge;for(let d=0;d<a;d++){const a=this.offsetX+(d+.5)*this.labelWidth;this.ctx.beginPath(),this.ctx.moveTo(a,b),this.ctx.lineTo(a,c),this.ctx.stroke(),this.ctx.fillText(this.data.xScale[0].labels[d],a,this.canvas.clientHeight-6)}}makeHorizontalLines(){this.ctx.lineWidth=1,this.ctx.strokeStyle="rgb(220 220 220 / 100%)",this.ctx.font="10px Arial",this.ctx.textAlign="right",this.ctx.fillStyle="rgb(90 90 90 / 100%)";let a=-1;const b=this.maxBorder,c=this.offsetX-this.edge,d=this.canvas.clientWidth-this.offsetX+this.edge;for(let e=0;e<this.regionLength;e++){const f=this.offsetY+e*this.regionHeight;this.ctx.beginPath(),this.ctx.moveTo(c,f),this.ctx.lineTo(d,f),this.ctx.stroke();const g=Math.round(b-this.regionStep*e);this.ctx.fillText(g+"",c-5,f+3),0===g&&(a=e)}if(-1<a){this.ctx.lineWidth=1,this.ctx.strokeStyle="rgb(180 180 180 / 100%)";const b=this.offsetY+a*this.regionHeight;this.ctx.beginPath(),this.ctx.moveTo(c,b),this.ctx.lineTo(d,b),this.ctx.stroke()}}makeGraphLine(a){this.ctx.lineWidth=3,this.ctx.strokeStyle=this.data.colors[a],this.ctx.beginPath();const b=this.data.values[a],c=parseFloat(b[0]);this.ctx.moveTo(this.offsetX+.5*this.labelWidth,this.offsetY+(this.maxBorder-c)*this.regionPixelValue);for(let c=0;c<b.length;c++){const a=parseFloat(b[c]);this.ctx.lineTo(this.offsetX+(c+.5)*this.labelWidth,this.offsetY+(this.maxBorder-a)*this.regionPixelValue)}this.ctx.stroke()}makeDots(a){this.ctx.fillStyle=this.data.colors[a],this.ctx.lineWidth=2,this.ctx.strokeStyle="rgb(255 255 255 / 80%)";const b=this.data.values[a];for(let c=0;c<b.length;c++){const a=parseFloat(b[c]);this.ctx.beginPath(),this.ctx.arc(this.offsetX+(c+.5)*this.labelWidth,this.offsetY+(this.maxBorder-a)*this.regionPixelValue,4,0,2*Math.PI),this.ctx.fill(),this.ctx.stroke()}}makeGradient(a){if(this.data.gradient[a]!==void 0&&1==this.data.gradient[a]){this.ctx.save(),this.ctx.lineWidth=1,this.ctx.strokeStyle=this.data.colors[a],this.ctx.beginPath(),this.ctx.moveTo(this.offsetX+.5*this.labelWidth,this.offsetY+this.maxBorder*this.regionPixelValue);const b=this.data.values[a];for(let a,c=0;c<b.length;c++)a=parseFloat(b[c]),this.ctx.lineTo(this.offsetX+(c+.5)*this.labelWidth,this.offsetY+(this.maxBorder-a)*this.regionPixelValue);this.ctx.lineTo(this.offsetX+(b.length-.5)*this.labelWidth,this.offsetY+this.maxBorder*this.regionPixelValue),this.ctx.closePath(),this.ctx.clip();const c=this.maxBorder-this.minBorder,d=this.ctx.createLinearGradient(0,.8*((this.maxBorder-this.maxValue)*this.regionPixelValue),0,this.offsetY+c*this.regionPixelValue);d.addColorStop(1,"rgb(255 255 255 / 30%)"),d.addColorStop(0,this.data.colors[a]),this.ctx.fillStyle=d,this.ctx.fillRect(this.offsetX+.5*this.labelWidth,.8*((this.maxBorder-this.maxValue)*this.regionPixelValue),this.canvas.clientWidth-2*this.offsetX-this.labelWidth,this.data.height-2*this.offsetY),this.ctx.restore()}}makeHint(){let a=document.createElement("div");a.id="graph-tip-"+this.id,a.setAttribute("class","graph-tip"),a.setAttribute("data-index","-1"),a.setAttribute("style","top: 0px;left: 0px;opacity: 0;");const b=this.data.values.length;let c="<span class=\"title\"></span><ul>";for(let a=0;a<b;a++)c+="<li><strong></strong><span class=\"hint\"></span></li>";c+="</ul><div class=\"pointer\"></div>",a.innerHTML=c,this.canvas.after(a);let d=document.getElementById("graph-tip-"+this.id),e=d.querySelectorAll(".hint"),f=d.querySelectorAll("ul li");for(let a,c=0;c<b;c++){a=this.data.names[c],a===void 0&&(a="");let b=this.data.colors[c];b===void 0&&(b="#000000"),e[c].innerHTML=a,f[c].style.borderTop="3px solid "+b}}makeTitle(){this.data.title!==void 0&&(this.ctx.font="12px Arial",this.ctx.textAlign="right",this.ctx.fillStyle="rgb(90 90 90 / 100%)",this.ctx.fillText(this.data.title,this.canvas.clientWidth-this.offsetX,14))}calcMinMax(a){const b=this.data.values[a].length;let c=this.maxBorder,d=this.minBorder,e=this.minValue,f=this.maxValue;for(let g,h=0;h<b;h++)g=1*this.data.values[0][h],g<d&&(d=g),g>c&&(c=g),g<e&&(e=g),g>f&&(f=g);this.minValue=e,this.maxValue=f,this.maxBorder=10*Math.ceil(c/10),this.minBorder=10*Math.floor(d/10)}calcRegionStep(){const a=this.maxBorder-this.minBorder,b=Math.floor(Math.log10(a))+1;let c=Math.ceil(a/10**b)*10**(b-1);return 3>a/c&&(c/=2),c}graphMouseMove(a){const b=a.clientX,c=this.labelWidth,d=Math.round((b-this.offsetX)/c-.5);if(-1<d&&d<this.data.values[0].length){const a=this.data.values.length;let b=parseFloat(this.data.values[0][d]);for(let c=1;c<a;c++){const a=parseFloat(this.data.values[c][d]);a>b&&(b=a)}const e=this.offsetY+this.canvas.offsetTop+(this.maxBorder-b)*this.regionPixelValue;let f=document.getElementById("graph-tip-"+this.id);if(d!==1*f.getAttribute("data-index")){const b=this.canvas.offsetLeft+this.canvas.offsetWidth,g=(d+.5)*c+this.canvas.offsetLeft+this.offsetX-.5*f.clientWidth;let h=g;4>h&&(h=4),h+f.offsetWidth>b&&(h=b-f.offsetWidth),f.style.top=e-f.clientHeight-10+"px",f.style.left=h+"px",f.style.opacity="1",f.setAttribute("data-index",d);let i=this.data.yScale[0].suffix;i===void 0&&(i="");let j=this.data.xScale[0].suffix;j===void 0&&(j=""),f.querySelector("span.title").innerHTML=this.data.xScale[0].labels[d]+j;let k=f.querySelectorAll("ul li strong");for(let b=0;b<a;b++)k[b].innerHTML=this.data.values[b][d]+i;f.querySelector("div.pointer").style.left="calc(50% + "+(g-h)+"px)"}}}graphMouseLeave(a){const b=a.clientX,c=a.clientY,d=this.offsetY+this.canvas.offsetTop,e=this.offsetX+this.canvas.offsetLeft,f=this.canvas.clientWidth+e-2*this.offsetX,g=this.canvas.clientHeight+d-2*this.offsetY;(b<e||b>f||c<d||c>g)&&this.hideHint()}hideHint(){let a=document.getElementById("graph-tip-"+this.id);a.style.top="0",a.style.left="0",a.style.opacity="0"}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}destroy(){window.removeEventListener("load",this.handleBuild),window.removeEventListener("resize",this.handleBuild),this.canvas.removeEventListener("mousemove",this.handleMouseMove),this.canvas.removeEventListener("mouseleave",this.handleMouseLeave),this.canvas.removeEventListener("ontouchstart",this.handleMouseMove),this.clear(),document.getElementById("graph-tip-"+this.id).remove()}}
